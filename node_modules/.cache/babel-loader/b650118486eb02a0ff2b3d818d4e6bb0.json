{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/inbaeyoon/Desktop/second_quest/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Users/inbaeyoon/Desktop/second_quest/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/inbaeyoon/Desktop/second_quest/src/components/DomesticResult.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  flex-direction: column;\\n  .card {\\n    margin-top: 120px;\\n    width: 20rem;\\n    letter-spacing: 5px;\\n    text-indent: 5px;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Card } from 'react-bootstrap';\nimport Loading from '../components/Loading';\nimport getRandomNumber from '../lib/getRandomNumber';\nimport { domesticPlaces } from '../assets/datas/domesticPlaces';\n\nconst DomesticResult = ({\n  region\n}) => {\n  const _useState = useState({\n    placeRegion: '',\n    placeName: '',\n    placeUrl: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        info = _useState2[0],\n        setInfo = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  useEffect(() => {\n    console.log(region);\n    const result = domesticPlaces.filter(place => place.region === region);\n    const places = result[0].places;\n    const max_length = places.length;\n    const rand_num = getRandomNumber(max_length);\n    setInfo({\n      placeRegion: region,\n      placeName: places[rand_num].name,\n      placeUrl: places[rand_num].url\n    });\n    setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n  }, [region]);\n  return React.createElement(ResultBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, loading ? React.createElement(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }) : React.createElement(Card, {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, info.name), React.createElement(Card.Subtitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, info.addr)), React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Card.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, info.main_menu ? \"\".concat(info.main_menu, \" \\uC804\\uBB38\\uC785\\uB2C8\\uB2E4\") : '다 맛있어요'))));\n};\n\nexport default DomesticResult;\nconst ResultBlock = styled.div(_templateObject());","map":{"version":3,"sources":["/Users/inbaeyoon/Desktop/second_quest/src/components/DomesticResult.js"],"names":["React","useState","useEffect","styled","Card","Loading","getRandomNumber","domesticPlaces","DomesticResult","region","placeRegion","placeName","placeUrl","info","setInfo","loading","setLoading","console","log","result","filter","place","places","max_length","length","rand_num","name","url","setTimeout","addr","main_menu","ResultBlock","div"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,eAAP,MAA4B,wBAA5B;AACA,SAASC,cAAT,QAA+B,gCAA/B;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA,oBACbR,QAAQ,CAAC;AAC/BS,IAAAA,WAAW,EAAE,EADkB;AAE/BC,IAAAA,SAAS,EAAE,EAFoB;AAG/BC,IAAAA,QAAQ,EAAE;AAHqB,GAAD,CADK;AAAA;AAAA,QAC9BC,IAD8B;AAAA,QACxBC,OADwB;;AAAA,qBAOPb,QAAQ,CAAC,IAAD,CAPD;AAAA;AAAA,QAO9Bc,OAP8B;AAAA,QAOrBC,UAPqB;;AASrCd,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACA,UAAMU,MAAM,GAAGZ,cAAc,CAACa,MAAf,CAAsBC,KAAK,IAAIA,KAAK,CAACZ,MAAN,KAAiBA,MAAhD,CAAf;AACA,UAAMa,MAAM,GAAGH,MAAM,CAAC,CAAD,CAAN,CAAUG,MAAzB;AACA,UAAMC,UAAU,GAAGD,MAAM,CAACE,MAA1B;AACA,UAAMC,QAAQ,GAAGnB,eAAe,CAACiB,UAAD,CAAhC;AAEAT,IAAAA,OAAO,CAAC;AACNJ,MAAAA,WAAW,EAAED,MADP;AAENE,MAAAA,SAAS,EAAEW,MAAM,CAACG,QAAD,CAAN,CAAiBC,IAFtB;AAGNd,MAAAA,QAAQ,EAAEU,MAAM,CAACG,QAAD,CAAN,CAAiBE;AAHrB,KAAD,CAAP;AAMAC,IAAAA,UAAU,CAAC,MAAM;AACfZ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAhBQ,EAgBN,CAACP,MAAD,CAhBM,CAAT;AAiBA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,OAAO,GACN,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAGN,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaF,IAAI,CAACa,IAAlB,CADF,EAEE,oBAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgBb,IAAI,CAACgB,IAArB,CAFF,CADF,EAKE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,IAAI,CAACiB,SAAL,aAAoBjB,IAAI,CAACiB,SAAzB,uCAA6C,QADhD,CADF,CALF,CAJJ,CADF;AAmBD,CA7CD;;AA+CA,eAAetB,cAAf;AAEA,MAAMuB,WAAW,GAAG5B,MAAM,CAAC6B,GAAV,mBAAjB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Card } from 'react-bootstrap';\nimport Loading from '../components/Loading';\nimport getRandomNumber from '../lib/getRandomNumber';\nimport { domesticPlaces } from '../assets/datas/domesticPlaces';\n\nconst DomesticResult = ({ region }) => {\n  const [info, setInfo] = useState({\n    placeRegion: '',\n    placeName: '',\n    placeUrl: ''\n  });\n\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    console.log(region);\n    const result = domesticPlaces.filter(place => place.region === region);\n    const places = result[0].places;\n    const max_length = places.length;\n    const rand_num = getRandomNumber(max_length);\n\n    setInfo({\n      placeRegion: region,\n      placeName: places[rand_num].name,\n      placeUrl: places[rand_num].url\n    });\n\n    setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n  }, [region]);\n  return (\n    <ResultBlock>\n      {loading ? (\n        <Loading />\n      ) : (\n        <Card className='card'>\n          <Card.Header>\n            <Card.Title>{info.name}</Card.Title>\n            <Card.Subtitle>{info.addr}</Card.Subtitle>\n          </Card.Header>\n          <Card.Body>\n            <Card.Text>\n              {info.main_menu ? `${info.main_menu} 전문입니다` : '다 맛있어요'}\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      )}\n    </ResultBlock>\n  );\n};\n\nexport default DomesticResult;\n\nconst ResultBlock = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  .card {\n    margin-top: 120px;\n    width: 20rem;\n    letter-spacing: 5px;\n    text-indent: 5px;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}